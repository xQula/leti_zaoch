#include <iostream>
#include <string>
#include <fstream>
using namespace std;

class MyString{
public:

    MyString() {
        str = nullptr;
        length = 0;
    }

    MyString(const char* str){
        length = strlen(str);
        this->str = new char[length + 1];
        for (int i = 0; i < length; i++) {
            this->str[i] = str[i];
        }
        this->str[length] = '\0';
    }

    ~MyString(){
        delete[] this->str;
    }

    MyString(const MyString& other){
        length = strlen(other.str);
        this->str = new char[length + 1];
        for (int i = 0; i < length; i++){
            this->str[i] = other.str[i];
        }
        this->str[length] = '\0';
    }

    MyString& operator =(const string& other){
        if (this->str != nullptr){
            delete[] str;
        }
        length = other.length();
        this->str = new char[length + 1];
        for (int i = 0; i < length; i++){
            this->str[i] = other[i];
        }
        this->str[length] = '\0';
        return *this;
    }

    int Length(){
        return length;
    }

    char& operator [](int index){
        return this->str[index];
    }

    friend MyString erase( int elem, MyString& other) {
        for (; elem < other.length; elem++) {
            other.str[elem + 1] = other.str[elem + 2];
        }
        other.length--;
        MyString newOther;
        newOther.length = other.length;
        newOther.str = new char[other.length];
        for (int a = 0; a < other.length; a++) {
            newOther[a] = other[a];
        }
        return newOther;
    }

    friend std::ostream& operator<< (std::ostream& out, const MyString& other) {
        for (int a = 0; a < other.length; a++) {
            out << other.str[a];
        }
        return out;
    }

private:
    char* str;
    int length;
    char Mark = '@';
};



int main(){
    MyString x ;
    fstream fs;
    fs.open("myFile.txt", fstream::out | fstream::in);
    if (!fs.is_open()) {
        cout << "File 1 opening error!" << endl;
    }
    else {
        cout << "File 1 open" << endl;
        string z;
        while(!fs.eof()) {
            z = "";
            getline(fs, z);
        }
        x = z;
        for (int i = 0; i < x.Length(); i++)
        {
            if (x[i] == ' ')
                while (x[i + 1] == ' ')
                    erase(i, x);
        }
    }
    fs.close();

    fs.open("myFile1.txt", fstream::in | fstream::out | fstream::app);
    if (!fs.is_open()) {
        cout << "File 2 opening error!" << endl;
    }
    else {
        cout << "File 2 open" << endl;
        fs << x;
    }
    fs.close();
    return 0;
}